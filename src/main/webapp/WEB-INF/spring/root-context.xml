<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->


	<!-- [1] DataSource빈 선언 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/member-mapper.xml</value>
				<value>classpath:config/curation-mapper.xml</value>
				<value>classpath:config/like-mapper.xml</value>
				<value>classpath:config/mypage-mapper.xml</value>
				<value>classpath:config/shopdetail-mapper.xml</value>
				<value>classpath:config/mapMapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- Spring JDBC나 Mybatis를 이용해서 DB연동을 처리하는 경우 DataSourceTransactionManager이 
		트랙잭션 관리자로 사용한다. -->
	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- [5] 선언적 트랜잭션 :<tx:advice>태그를 이용한 트랜잭션처리 -->
	<!-- Process로 끝나는 모든 메소드에 적용시킨다 하면 tx:method name="*process" .. 가능 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insertProcess"
				rollback-for="org.springframework.dao.DuplicateKeyException" />
			<tx:method name="*Process"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* service.Board*.*(..))" />
	</aop:config>

	<!-- [7] view -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<!-- <property name="order" value="2" /> -->
	</bean>
</beans>
